services:
  web:
    image: php:8.2-apache
    container_name: sovpadem_web
    restart: unless-stopped
    volumes:
      - ./src:/var/www/html
      - ./docker/apache/000-default.conf:/etc/apache2/sites-available/000-default.conf
      - ./composer.json:/var/www/composer.json
      - ./phinx.php:/var/www/phinx.php
      - ./db:/var/www/db
      - ./scripts:/var/www/html/scripts
      - ./vendor:/var/www/vendor
    depends_on:
      - db
    environment:
      - APACHE_DOCUMENT_ROOT=/var/www/html/public
      - APP_ENV=prod
      - MYSQL_HOST=sovpadem_db
      - MYSQL_DATABASE=${MYSQL_DATABASE:-sovpadem}
      - MYSQL_USER=${MYSQL_USER:-sovpadem_user}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD:-sovpadem_password}
    command: >
      bash -c "apt-get update && apt-get install -y libzip-dev zip unzip git && 
      docker-php-ext-install pdo pdo_mysql zip && 
      a2enmod rewrite headers && 
      php -r \"copy('https://getcomposer.org/installer', 'composer-setup.php');\" &&
      php composer-setup.php --install-dir=/usr/local/bin --filename=composer &&
      php -r \"unlink('composer-setup.php');\" &&
      apache2-foreground"
    labels:
      - traefik.enable=true
      - traefik.http.routers.sovpadem.rule=Host(`sovpadem.ru`)
      - traefik.http.routers.sovpadem.entrypoints=websecure
      - traefik.http.routers.sovpadem.tls=true
      - traefik.http.routers.sovpadem.tls.certresolver=letsencrypt
      - traefik.http.services.sovpadem.loadbalancer.server.port=80
    networks:
      - web
    profiles:
      - prod

  db:
    image: mysql:8.0
    platform: linux/amd64
    container_name: sovpadem_db
    restart: unless-stopped
    ports:
      - "4400:3306"  # Внешний порт 4400 мапится на стандартный порт MySQL 3306
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-rootpassword}
      MYSQL_DATABASE: ${MYSQL_DATABASE:-sovpadem}
      MYSQL_USER: ${MYSQL_USER:-sovpadem_user}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD:-sovpadem_password}
    volumes:
      - sovpadem_db_data:/var/lib/mysql
      - ./docker/mysql/my.cnf:/etc/mysql/conf.d/custom.cnf # Добавляем настройки кодировки
    command: --default-authentication-plugin=mysql_native_password --bind-address=0.0.0.0
    networks:
      - web
    profiles:
      - prod

  web_dev:
    image: php:8.2-apache
    container_name: sovpadem_web_dev
    restart: unless-stopped
    ports:
      - "8080:80"
    volumes:
      - ./src:/var/www/html
      - ./docker/apache/000-default.conf:/etc/apache2/sites-available/000-default.conf
      - ./composer.json:/var/www/composer.json
      - ./phinx.php:/var/www/phinx.php
      - ./db:/var/www/db
      - ./scripts:/var/www/html/scripts
      - ./vendor:/var/www/vendor
    depends_on:
      - db_dev
    environment:
      - APACHE_DOCUMENT_ROOT=/var/www/html/public
      - PHP_DISPLAY_ERRORS=1
      - PHP_ERROR_REPORTING=E_ALL
      - APP_ENV=dev
      - MYSQL_HOST=db_dev
    command: >
      bash -c "apt-get update && apt-get install -y libzip-dev zip unzip git && 
      docker-php-ext-install pdo pdo_mysql zip && 
      a2enmod rewrite headers && 
      php -r \"copy('https://getcomposer.org/installer', 'composer-setup.php');\" &&
      php composer-setup.php --install-dir=/usr/local/bin --filename=composer &&
      php -r \"unlink('composer-setup.php');\" &&
      apache2-foreground"
    networks:
      - web
    profiles:
      - dev

  db_dev:
    image: mysql:8.0
    platform: linux/arm64
    container_name: sovpadem_db_dev
    restart: unless-stopped
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-rootpassword}
      MYSQL_DATABASE: ${MYSQL_DATABASE:-sovpadem}
      MYSQL_USER: ${MYSQL_USER:-sovpadem_user}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD:-sovpadem_password}
    volumes:
      - sovpadem_db_data:/var/lib/mysql
      - ./docker/mysql/my.cnf:/etc/mysql/conf.d/custom.cnf # Добавляем настройки кодировки
    networks:
      - web
    profiles:
      - dev

volumes:
  sovpadem_db_data:

networks:
  web:
    external: true